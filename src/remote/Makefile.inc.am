# vim: filetype=automake

LOGROTATE_FILES_IN += \
	remote/libvirtd.qemu.logrotate.in \
	remote/libvirtd.lxc.logrotate.in \
	remote/libvirtd.libxl.logrotate.in \
	remote/libvirtd.logrotate.in \
	$(NULL)

SYSCONF_FILES += \
	remote/libvirtd.sysconf \
	remote/virtproxyd.sysconf \
	$(NULL)

OPENRC_INIT_FILES += \
	libvirtd.init \
	virtproxyd.init \
	$(NULL)
OPENRC_INIT_FILES_IN += \
	remote/libvirtd.init.in \
	remote/virtproxyd.init.in \
	$(NULL)
OPENRC_CONF_FILES += \
	remote/libvirtd.confd \
	remote/virtproxyd.confd \
	$(NULL)

if WITH_LIBVIRTD

INSTALL_DATA_DIRS += remote

install-data-remote:
	$(MKDIR_P) "$(DESTDIR)$(localstatedir)/log/libvirt"

uninstall-data-remote:
	rmdir "$(DESTDIR)$(localstatedir)/log/libvirt" ||:

if WITH_SYSCTL
# Use $(prefix)/lib rather than $(libdir), since man sysctl.d insists on
# /usr/lib/sysctl.d/ even when libdir is /usr/lib64
sysctldir = $(prefix)/lib/sysctl.d

install-sysctl:
	$(MKDIR_P) $(DESTDIR)$(sysctldir)
	$(INSTALL_DATA) $(srcdir)/remote/libvirtd.sysctl \
	  $(DESTDIR)$(sysctldir)/60-libvirtd.conf

uninstall-sysctl:
	rm -f $(DESTDIR)$(sysctldir)/60-libvirtd.conf
	rmdir $(DESTDIR)$(sysctldir) || :

INSTALL_DATA_LOCAL += install-sysctl
UNINSTALL_LOCAL += uninstall-sysctl
endif WITH_SYSCTL

if WITH_POLKIT
polkitdir = $(datadir)/polkit-1
polkitactionsdir = $(polkitdir)/actions
polkitrulesdir = $(polkitdir)/rules.d

install-polkit:
	$(MKDIR_P) $(DESTDIR)$(polkitactionsdir)
	$(INSTALL_DATA) $(srcdir)/remote/libvirtd.policy \
		$(DESTDIR)$(polkitactionsdir)/org.libvirt.unix.policy
	$(MKDIR_P) $(DESTDIR)$(polkitrulesdir)
	$(INSTALL_DATA) $(srcdir)/remote/libvirtd.rules \
		$(DESTDIR)$(polkitrulesdir)/50-libvirt.rules

uninstall-polkit:
	rm -f $(DESTDIR)$(polkitactionsdir)/org.libvirt.unix.policy
	rmdir $(DESTDIR)$(polkitactionsdir) || :
	rm -f $(DESTDIR)$(polkitrulesdir)/50-libvirt.rules
	rmdir $(DESTDIR)$(polkitrulesdir) || :

INSTALL_DATA_LOCAL += install-polkit
UNINSTALL_LOCAL += uninstall-polkit
endif WITH_POLKIT

endif WITH_LIBVIRTD

.PHONY: \
	install-data-remote \
	uninstall-data-remote \
	$(NULL)

# This is needed for clients too, so can't wrap in
# the WITH_LIBVIRTD conditional
if WITH_SASL
sasldir = $(sysconfdir)/sasl2

install-sasl:
	$(MKDIR_P) $(DESTDIR)$(sasldir)
	$(INSTALL_DATA) $(srcdir)/remote/libvirtd.sasl \
		$(DESTDIR)$(sasldir)/libvirt.conf

uninstall-sasl:
	rm -f $(DESTDIR)$(sasldir)/libvirt.conf
	rmdir $(DESTDIR)$(sasldir) || :

INSTALL_DATA_LOCAL += install-sasl
UNINSTALL_LOCAL += uninstall-sasl
endif WITH_SASL

LIBVIRTD_INIT_VARS = \
	$(COMMON_UNIT_VARS)

if WITH_FIREWALLD
LIBVIRTD_INIT_VARS += \
	-e 's|[@]NEED_FIREWALLD[@]|need firewalld|g'
else ! WITH_FIREWALLD
LIBVIRTD_INIT_VARS += \
	-e 's|[@]NEED_FIREWALLD[@]||g'
endif ! WITH_FIREWALLD

libvirtd.init: remote/libvirtd.init.in $(top_builddir)/config.status
	$(AM_V_GEN)$(SED) $(LIBVIRTD_INIT_VARS) $< > $@-t && mv $@-t $@

virtproxyd.init: remote/virtproxyd.init.in $(top_builddir)/config.status
	$(AM_V_GEN)$(SED) $(LIBVIRTD_INIT_VARS) $< > $@-t && mv $@-t $@
