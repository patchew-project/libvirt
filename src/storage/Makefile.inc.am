# vim: filetype=automake

STORAGE_DRIVER_VSTORAGE_SOURCES = \
	storage/storage_backend_vstorage.h \
	storage/storage_backend_vstorage.c \
	$(NULL)

STORAGE_HELPER_DISK_SOURCES = \
	storage/parthelper.c \
	$(NULL)

DRIVER_SOURCE_FILES += $(addprefix $(srcdir)/,$(STORAGE_DRIVER_SOURCES))
STATEFUL_DRIVER_SOURCE_FILES += \
	$(addprefix $(srcdir)/,$(STORAGE_DRIVER_SOURCES))

storagebackend_LTLIBRARIES =

if WITH_STORAGE
sbin_PROGRAMS += virtstoraged

nodist_conf_DATA += storage/virtstoraged.conf
augeas_DATA += storage/virtstoraged.aug
augeastest_DATA += storage/test_virtstoraged.aug

virtstoraged_SOURCES = $(REMOTE_DAEMON_SOURCES)
nodist_virtstoraged_SOURCES = $(REMOTE_DAEMON_GENERATED)
virtstoraged_CFLAGS = \
       $(REMOTE_DAEMON_CFLAGS) \
       -DDAEMON_NAME="\"virtstoraged\"" \
       -DMODULE_NAME="\"storage\"" \
       $(NULL)
virtstoraged_LDFLAGS = $(REMOTE_DAEMON_LD_FLAGS)
virtstoraged_LDADD = $(REMOTE_DAEMON_LD_ADD)

SYSCONF_FILES += storage/virtstoraged.sysconf

SYSTEMD_UNIT_FILES += \
	virtstoraged.service \
	virtstoraged.socket \
	virtstoraged-ro.socket \
	virtstoraged-admin.socket \
	$(NULL)
SYSTEMD_UNIT_FILES_IN += \
	storage/virtstoraged.service.in \
	$(NULL)

OPENRC_INIT_FILES += \
	virtstoraged.init \
	$(NULL)
OPENRC_INIT_FILES_IN += \
	storage/virtstoraged.init.in \
	$(NULL)

VIRTSTORAGED_UNIT_VARS = \
	$(VIRTD_UNIT_VARS) \
	-e 's|[@]name[@]|Libvirt storage|g' \
	-e 's|[@]service[@]|virtstoraged|g' \
	-e 's|[@]sockprefix[@]|virtstoraged|g' \
	$(NULL)

virtstoraged.init: storage/virtstoraged.init.in $(top_builddir)/config.status
	$(AM_V_GEN)$(SED) $(LIBVIRTD_INIT_VARS) $< > $@-t && mv $@-t $@

virtstoraged.service: storage/virtstoraged.service.in \
		$(top_builddir)/config.status
	$(AM_V_GEN)$(SED) $(VIRTSTORAGED_UNIT_VARS) $< > $@-t && mv $@-t $@

virtstorage%.socket: remote/libvirt%.socket.in \
		$(top_builddir)/config.status
	$(AM_V_GEN)$(SED) $(VIRTSTORAGED_UNIT_VARS) $< > $@-t && mv $@-t $@

storage/virtstoraged.conf: remote/libvirtd.conf.in
	$(AM_V_GEN)$(SED) \
		-e '/[@]CUT_ENABLE_IP[@]/,/[@]END[@]/d' \
		-e 's/[@]DAEMON_NAME[@]/virtstoraged/' \
		$< > $@

storage/virtstoraged.aug: remote/libvirtd.aug.in
	$(AM_V_GEN)$(SED) \
		-e '/[@]CUT_ENABLE_IP[@]/,/[@]END[@]/d' \
		-e 's/[@]DAEMON_NAME[@]/virtstoraged/' \
		-e 's/[@]DAEMON_NAME_UC[@]/Virtstoraged/' \
		$< > $@

storage/test_virtstoraged.aug: remote/test_libvirtd.aug.in \
		storage/virtstoraged.conf $(AUG_GENTEST_SCRIPT)
	$(AM_V_GEN)$(AUG_GENTEST) storage/virtstoraged.conf \
		$(srcdir)/remote/test_libvirtd.aug.in | \
		$(SED) \
		-e '/[@]CUT_ENABLE_IP[@]/,/[@]END[@]/d' \
		-e 's/[@]DAEMON_NAME[@]/virtstoraged/' \
		-e 's/[@]DAEMON_NAME_UC[@]/Virtstoraged/' \
		> $@ || rm -f $@


endif WITH_STORAGE

if WITH_STORAGE_VSTORAGE
libvirt_storage_backend_vstorage_la_SOURCES = \
	$(STORAGE_DRIVER_VSTORAGE_SOURCES)
libvirt_storage_backend_vstorage_la_CFLAGS = \
	-I$(srcdir)/conf \
	$(AM_CFLAGS) \
	$(NULL)

storagebackend_LTLIBRARIES += libvirt_storage_backend_vstorage.la
libvirt_storage_backend_vstorage_la_LDFLAGS = $(AM_LDFLAGS_MOD)
libvirt_storage_backend_vstorage_la_LIBADD = \
	libvirt.la \
	$(GLIB_LIBS) \
	$(NULL)
endif WITH_STORAGE_VSTORAGE

if WITH_STORAGE_DISK
libexec_PROGRAMS += libvirt_parthelper

libvirt_parthelper_SOURCES = $(STORAGE_HELPER_DISK_SOURCES)
libvirt_parthelper_LDFLAGS = \
	$(AM_LDFLAGS) \
	$(NULL)
libvirt_parthelper_LDADD = \
	$(LIBPARTED_LIBS) \
	libvirt.la \
	$(GLIB_LIBS) \
	$(NULL)
if WITH_DTRACE_PROBES
libvirt_parthelper_LDADD += libvirt_probes.lo
endif WITH_DTRACE_PROBES

libvirt_parthelper_CFLAGS = \
	$(LIBPARTED_CFLAGS) \
	$(AM_CFLAGS) \
	$(NULL)
endif WITH_STORAGE_DISK
