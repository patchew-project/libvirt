#
# The default lockd behaviour is to acquire locks directly
# against each configured disk file / block device. If the
# application wishes to instead manually manage leases in
# the guest XML, then this parameter can be disabled
#
#auto_disk_leases = 1

#
# Flag to determine whether we allow starting of guests
# which do not have any <lease> elements defined in their
# configuration.
#
# If 'auto_disk_leases' is disabled, this setting defaults
# to enabled, otherwise it defaults to disabled.
#
#require_lease_for_disks = 0

#
# The DLM allows locks to be partitioned into "lockspaces",
# The purpose of lockspaces is to provide a private namespace
# for locks that are part of a single application. Lockspaces
# are identified by name and are cluster-wide. A lockspace
# named "myLS" is the same lockspace on all nodes in the
# cluster and locks will contend for resources the same as
# if they were on the same system. Lockspace names are
# case-sensitive so "MyLS" is a distinct lockspace to "myLS".
#
# More information refers to '3.8. Lockspaces' in
#   http://people.redhat.com/ccaulfie/docs/rhdlmbook.pdf
#
#lockspace_name = "libvirt"

#
# One lock must belong to one lockspace, and is associated
# with one lock resource, owned by one process. The lock
# without `LKF_PERSISTENT` would disappear if owner process
# was dead. However, a lock with `LKF_PERSISTENT` flag means
# lock is alive although owner process was dead. However, it
# will become a orphan lock and could't be released. In order
# to adopt those orphan locks we need a file to record the
# lock information.
#
#lock_record_file_path = "/tmp/libvirtd-dlm-file"
#

#
# Flag to determine to whether purge orphan locks which could
# not be adopted or not during the dlm lock plugin
# initialization.
#
#purge_lockspace = 1
