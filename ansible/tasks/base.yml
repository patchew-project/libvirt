---
- name: Set additional facts (OS)
  set_fact:
    os_name: '{{ ansible_distribution }}'
    os_version: '{{ ansible_distribution_major_version }}'
  when:
    - ansible_distribution_release != 'Rawhide'

- name: Set additional facts (OS)
  set_fact:
    os_name: '{{ ansible_distribution }}'
    os_version: Rawhide
  when:
    - ansible_distribution_release == 'Rawhide'

- name: Set additional facts (package format)
  set_fact:
    package_format: deb
  when:
    - ( os_name == 'Debian' or
        os_name == 'Ubuntu' )

- name: Set additional facts (package format)
  set_fact:
    package_format: pkg
  when:
    - os_name == 'FreeBSD'

- name: Set additional facts (package format)
  set_fact:
    package_format: rpm
  when:
    - ( os_name == 'CentOS' or
        os_name == 'Fedora' )

- name: Bootstrap the package module
  command: apt-get install -y python-apt
  args:
    creates: /usr/lib/python2*/*-packages/apt
  when:
    - package_format == 'deb'

- name: Bootstrap the package module
  command: dnf install -y python2-dnf
  args:
    creates: /usr/lib*/python2*/*-packages/dnf
  when:
    - os_name == 'Fedora'

- name: Update installed packages
  package:
    name: '*'
    state: latest
  when:
    - package_format == 'rpm'

- name: Update installed packages
  apt:
    upgrade: dist
    update_cache: yes
  when:
    - package_format == 'deb'

- name: Update installed packages
  shell: pkg update && pkg upgrade -y
  when:
    - package_format == 'pkg'

- name: Install base packages
  package:
    name: '{{ item }}'
    state: present
  with_items:
    - bash
    - git
    - screen
    - sudo
    - vim

- name: Remove unwanted packages
  package:
    name: '{{ item }}'
    state: absent
  with_items:
    - nano

- name: Permit file editing on SELinux-enabled systems
  package:
    name: libselinux-python
    state: present
  when:
    - ( os_name == 'CentOS' or
        os_name == 'Fedora' )

- name: Configure hostname
  hostname:
    name: '{{ inventory_hostname }}'

- name: Configure root shell
  user:
    name: root
    shell: '{{ bash }}'

- name: Configure ssh access for the root user
  authorized_key:
    user: root
    key: '{{ lookup("file", lookup("env", "HOME") + "/.ssh/id_rsa.pub") }}'
    state: present
